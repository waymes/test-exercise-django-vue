services:
  backend:
    build:
      context: ./backend
      target: dev
    env_file: ./backend/.env
    volumes:
      - backend_static:/app/staticfiles
    ports:
      - '8000:8000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  frontend:
    build:
      context: ./frontend
      target: dev
    env_file: ./frontend/.env
    ports:
      - '5000:5000'
    depends_on:
      - backend

  postgres:
    image: postgres:17.4
    env_file: ./backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data

  celery:
    build: ./backend
    command: celery -A config worker -l info -B
    env_file: ./backend/.env
    depends_on:
      - redis

volumes:
  postgres_data:
  redis_data:
  backend_static:
